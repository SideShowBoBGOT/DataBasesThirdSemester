-- Лабораторна робота № 3. Побудова простих запитів
--
--          Виконавець: ІП-11 Панченко Сергій
--          Варіант: 23
--
--            Мета:       • Вивчити оператор, котрий використовується в реляційних СУБД, для вибірки даних з таблиць
--                        • Вивчити команди SQL для створення запитів з використанням підзапитів та з’єднань
--
--                Програмне забезпечення аптеки. Аптека продає медикаменти і
--                виготовляє їх за рецептами. Ліки можуть бути різних типів:
--                a. готові ліки: таблетки, мазі, настоянки;
--                b. виготовлені аптекою: мікстури, мазі, розчини, настойки, порошки.
--                Різниця в типах ліків відображається в різному наборі атрибутів, що їх
--                характеризують. В аптеці існує довідник технологій приготування різних
--                ліків. У ньому вказуються: ідентифікаційний номер технології, назву ліків
--                і сам спосіб приготування. На складі на всі медикаменти встановлюється
--                критична норма, тобто коли будь-яких препаратів на складі менше
--                критичної норми, то складаються заявки на них і їх в терміновому
--                порядку привозять з оптових складів медикаментів. Для виготовлення
--                аптекою ліків хворий повинен принести рецепт від лікаря. У рецепті
--                повинно бути вказано: ПІБ, підпис і печатка лікаря, ПІБ, вік та діагноз
--                пацієнта, також кількість ліків і спосіб застосування. Хворий віддаєрецепт реєстратору, він приймає замовлення і дивиться, чи все є в
--                наявності. Якщо не всі ліки є в наявності, такий хворий поповнює
--                довідник замовлень з позначкою, що не всі компоненти є для замовлення.
--                Якщо всі компоненти є, то вони резервуються для хворого. Покупець
--                сплачує ціну ліків, йому повертається рецепт з позначкою про час
--                виготовлення. У призначений час хворий приходить і за тим самим
--                рецептом отримує готове ліки. Такий хворий поповнює список відданих
--                замовлень. Ведеться статистика за обсягами використовуваних
--                медикаментів.

-- 0) Створимо таблиці та заповнимо їх данними:

    CREATE DATABASE LabThree;
    USE LabThree;

    CREATE TABLE PreparationType (
        PreparationID INT UNSIGNED NOT NULL UNIQUE AUTO_INCREMENT,
        Name VARCHAR(40) NOT NULL,
        CONSTRAINT PreparationID PRIMARY KEY (PreparationID)
    );
    CREATE TABLE Medicine ( 
        MedicineID INT UNSIGNED NOT NULL UNIQUE AUTO_INCREMENT,
        Name VARCHAR(40) NOT NULL,
        TotalBought INT UNSIGNED,
        TotalQuantity INT UNSIGNED NOT NULL,
        CriticalQuantity INT UNSIGNED NOT NULL,
        PreparationID INT UNSIGNED NOT NULL,
        CONSTRAINT MedicineID PRIMARY KEY (MedicineID),
        CONSTRAINT MedicineForeignPreparation FOREIGN KEY (PreparationID) REFERENCES PreparationType (PreparationID) ON DELETE CASCADE ON UPDATE CASCADE
    );
    CREATE TABLE Storage (
        StorageID INT UNSIGNED NOT NULL UNIQUE AUTO_INCREMENT,
        Name VARCHAR(40) NOT NULL,
        CONSTRAINT StorageID PRIMARY KEY (StorageID)
    );
    CREATE TABLE StorageMedicine (
        StorageMedicineID INT UNSIGNED NOT NULL UNIQUE AUTO_INCREMENT,
        StorageID INT UNSIGNED NOT NULL,
        MedicineID INT UNSIGNED NOT NULL,
        CONSTRAINT StorageMedicineID PRIMARY KEY (StorageMedicineID),
        CONSTRAINT StorageMedicineForeignStorage FOREIGN KEY (StorageID) REFERENCES Storage (StorageID) ON DELETE CASCADE ON UPDATE CASCADE,
        CONSTRAINT StorageMedicineForeignMedicine FOREIGN KEY (MedicineID) REFERENCES Medicine (MedicineID) ON DELETE CASCADE ON UPDATE CASCADE
    );
    CREATE TABLE Warehouse (
        WarehouseID INT UNSIGNED NOT NULL UNIQUE AUTO_INCREMENT,
        Name VARCHAR(40) NOT NULL,
        CONSTRAINT WarehouseID PRIMARY KEY (WarehouseID)
    );
    CREATE TABLE WarehouseRequest (
        WarehouseRequestID INT UNSIGNED NOT NULL UNIQUE AUTO_INCREMENT,
        MedicineID INT UNSIGNED NOT NULL,
        StorageID INT UNSIGNED NOT NULL,
        WarehouseID INT UNSIGNED NOT NULL,
        CONSTRAINT WarehouseRequestID PRIMARY KEY (WarehouseRequestID),
        CONSTRAINT WarehouseRequestForeignMedicine FOREIGN KEY (MedicineID) REFERENCES Medicine (MedicineID) ON DELETE CASCADE ON UPDATE CASCADE,
        CONSTRAINT WarehouseRequestForeignStorage FOREIGN KEY (StorageID) REFERENCES Storage (StorageID) ON DELETE CASCADE ON UPDATE CASCADE,
        CONSTRAINT WarehouseRequestForeignWarehouse FOREIGN KEY (WarehouseID) REFERENCES Warehouse (WarehouseID) ON DELETE CASCADE ON UPDATE CASCADE
    );
    CREATE TABLE Orders (
        OrdersID INT UNSIGNED NOT NULL UNIQUE AUTO_INCREMENT,
        DoctorFullName VARCHAR(40) NOT NULL,
        DoctorCode INT UNSIGNED NOT NULL,
        TypeOfUse VARCHAR(40) NOT NULL,
        PacientFullName VARCHAR(40) NOT NULL,
        PacientAge TINYINT UNSIGNED NOT NULL,
        NumberOfMedicine SMALLINT UNSIGNED NOT NULL,
        PreparationDate DATETIME NOT NULL,
        Price FLOAT(8, 2) UNSIGNED NOT NULL,
        CONSTRAINT OrdersID PRIMARY KEY (OrdersID)
    );
    CREATE TABLE OrdersMedicine (
        OrdersMedicineID INT UNSIGNED NOT NULL UNIQUE AUTO_INCREMENT,
        IsReserved BOOL NOT NULL,
        OrdersID INT UNSIGNED NOT NULL,
        MedicineID INT UNSIGNED NOT NULL,
        CONSTRAINT OrdersMedicineID PRIMARY KEY (OrdersMedicineID),
        CONSTRAINT OrdersMedicineForeignMedicine FOREIGN KEY (MedicineID) REFERENCES Medicine (MedicineID) ON DELETE CASCADE ON UPDATE CASCADE,
        CONSTRAINT OrdersMedicineForeignOrders FOREIGN KEY (OrdersID) REFERENCES Orders (OrdersID) ON DELETE CASCADE ON UPDATE CASCADE
    );  

    -- Заповнимо таблицю рядками:
    INSERT INTO PreparationType (Name) VALUES ("Carbonization");
    INSERT INTO PreparationType (Name) VALUES ("Cancerezation");
    INSERT INTO PreparationType (Name) VALUES ("Pressuring");
    INSERT INTO PreparationType (Name) VALUES ("Solarization");

    INSERT INTO Medicine (Name, TotalBought, TotalQuantity, CriticalQuantity, PreparationID) VALUES ("Tealoz Duo", 4, 35, 2, 2);
    INSERT INTO Medicine (Name, TotalBought, TotalQuantity, CriticalQuantity, PreparationID) VALUES ("PanzerLac", 23, 120, 19, 4);
    INSERT INTO Medicine (Name, TotalBought, TotalQuantity, CriticalQuantity, PreparationID) VALUES ("Laplas", 4, 50, 2, 3);
    INSERT INTO Medicine (Name, TotalBought, TotalQuantity, CriticalQuantity, PreparationID) VALUES ("Riamot", 9, 40, 12, 2);
    INSERT INTO Medicine (Name, TotalBought, TotalQuantity, CriticalQuantity, PreparationID) VALUES ("Macert", 9, 70, 15, 1);
    INSERT INTO Medicine (Name, TotalBought, TotalQuantity, CriticalQuantity, PreparationID) VALUES ("APlus", NULL, 45, 5, 3);
    INSERT INTO Medicine (Name, TotalBought, TotalQuantity, CriticalQuantity, PreparationID) VALUES ("StarWater", NULL, 87, 4, 4);
    INSERT INTO Medicine (Name, TotalBought, TotalQuantity, CriticalQuantity, PreparationID) VALUES ("AntiTrauma", 2, 7, 4, 1);
    INSERT INTO Medicine (Name, TotalBought, TotalQuantity, CriticalQuantity, PreparationID) VALUES ("RedLight", 2, 5, 4, 1);
    INSERT INTO Medicine (Name, TotalBought, TotalQuantity, CriticalQuantity, PreparationID) VALUES ("ClassFoster", 2, 9, 4, 1);

    INSERT INTO Storage (Name) VALUES ("StorageOne");
    INSERT INTO Storage (Name) VALUES ("StorageTwo");
    INSERT INTO Storage (Name) VALUES ("StorageThree");
    INSERT INTO Storage (Name) VALUES ("StorageFour");
    INSERT INTO Storage (Name) VALUES ("StorageFive");
    INSERT INTO Storage (Name) VALUES ("StorageSix");
    INSERT INTO Storage (Name) VALUES ("StorageSeven");

    INSERT INTO StorageMedicine (StorageID, MedicineID) VALUES (1, 1);
    INSERT INTO StorageMedicine (StorageID, MedicineID) VALUES (2, 2);
    INSERT INTO StorageMedicine (StorageID, MedicineID) VALUES (3, 3);
    INSERT INTO StorageMedicine (StorageID, MedicineID) VALUES (4, 2);
    INSERT INTO StorageMedicine (StorageID, MedicineID) VALUES (4, 1);
    INSERT INTO StorageMedicine (StorageID, MedicineID) VALUES (5, 4);
    INSERT INTO StorageMedicine (StorageID, MedicineID) VALUES (1, 4);

    INSERT INTO Warehouse (Name) VALUES ('WarehouseOne');
    INSERT INTO Warehouse (Name) VALUES ('WarehouseTwo');
    INSERT INTO Warehouse (Name) VALUES ('WarehouseThree');
    INSERT INTO Warehouse (Name) VALUES ('WarehouseFour');
    INSERT INTO Warehouse (Name) VALUES ('WarehouseFive');
    INSERT INTO Warehouse (Name) VALUES ('WarehouseSix');
    INSERT INTO Warehouse (Name) VALUES ('WarehouseSeven');

    INSERT INTO WarehouseRequest (MedicineID, StorageID, WarehouseID) VALUES (1, 1, 1);
    INSERT INTO WarehouseRequest (MedicineID, StorageID, WarehouseID) VALUES (2, 2, 1);
    INSERT INTO WarehouseRequest (MedicineID, StorageID, WarehouseID) VALUES (2, 2, 2);
    INSERT INTO WarehouseRequest (MedicineID, StorageID, WarehouseID) VALUES (3, 1, 1);
    INSERT INTO WarehouseRequest (MedicineID, StorageID, WarehouseID) VALUES (2, 3, 4);
    INSERT INTO WarehouseRequest (MedicineID, StorageID, WarehouseID) VALUES (2, 1, 3);
    INSERT INTO WarehouseRequest (MedicineID, StorageID, WarehouseID) VALUES (3, 3, 3);
                     
    INSERT INTO Orders (DoctorFullName, DoctorCode, TypeOfUse, PacientFullName, PacientAge, NumberOfMedicine, PreparationDate, Price) VALUES ("Tyler Durden", 2217854, "Drinking", "The Narrator", 30, 1, '2022-10-22 14:00:00', 180.56);
    INSERT INTO Orders (DoctorFullName, DoctorCode, TypeOfUse, PacientFullName, PacientAge, NumberOfMedicine, PreparationDate, Price) VALUES ("Saul Goodman", 20082013, "Chewing", "Walter White", 50, 5, '2022-11-23 18:30:00', 503.45);
    INSERT INTO Orders (DoctorFullName, DoctorCode, TypeOfUse, PacientFullName, PacientAge, NumberOfMedicine, PreparationDate, Price) VALUES ("Trevis Bickle", 4322013, "Snoring", "Betsy White", 20, 15, '2022-01-23 19:30:00', 503.45);
    INSERT INTO Orders (DoctorFullName, DoctorCode, TypeOfUse, PacientFullName, PacientAge, NumberOfMedicine, PreparationDate, Price) VALUES ("Mario Mario", 82013, "Sniffing", "Luigi Mario", 50, 5, '2022-11-11 20:30:00', 102.45);
    INSERT INTO Orders (DoctorFullName, DoctorCode, TypeOfUse, PacientFullName, PacientAge, NumberOfMedicine, PreparationDate, Price) VALUES ("Robocop", 20082013, "Sucking", "Terminator", 50, 5, '2022-04-19 21:30:00', 503.45);

    INSERT INTO OrdersMedicine (IsReserved, OrdersID, MedicineID) VALUES (0, 1, 1);
    INSERT INTO OrdersMedicine (IsReserved, OrdersID, MedicineID) VALUES (1, 1, 2);
    INSERT INTO OrdersMedicine (IsReserved, OrdersID, MedicineID) VALUES (1, 3, 4);
    INSERT INTO OrdersMedicine (IsReserved, OrdersID, MedicineID) VALUES (0, 3, 2);

-- 1) Створити запити для вибірки даних з використанням (разом 12 запитів):

-- 	a. Найпростіших умов
        
        -- Опис:
            -- Визначимо назву ліків, ID яких = 2

		SELECT Name, MedicineID FROM Medicine WHERE MedicineID = 2;

            --Усі поля таблиці:

                SELECT Name, MedicineID FROM Medicine;

--                +-------------+------------+
--                | Name        | MedicineID |
--                +-------------+------------+
--                | Tealoz Duo  |          1 |
--                | PanzerLac   |          2 |
--                | Laplas      |          3 |
--                | Riamot      |          4 |
--                | Macert      |          5 |
--                | APlus       |          6 |
--                | StarWater   |          7 |
--                | AntiTrauma  |          8 |
--                | RedLight    |          9 |
--                | ClassFoster |         10 |
--                +-------------+------------+

            --Результат запиту:

                SELECT Name, MedicineID FROM Medicine WHERE MedicineID = 2;

                -- +-----------+------------+
                -- | Name      | MedicineID |
                -- +-----------+------------+
                -- | PanzerLac |          2 |
                -- +-----------+------------+


-- 	b. Операторів порівняння

        -- Опис:
            -- Визначимо назву сховищ, ID яких більше 2
    
        SELECT Name, StorageID FROM Storage WHERE StorageID > 2;

             --Усі поля таблиці:

                SELECT Name, StorageID FROM Storage;

                -- +--------------+-----------+
                -- | Name         | StorageID |
                -- +--------------+-----------+
                -- | StorageOne   |         1 |
                -- | StorageTwo   |         2 |
                -- | StorageThree |         3 |
                -- | StorageFour  |         4 |
                -- | StorageFive  |         5 |
                -- | StorageSix   |         6 |
                -- | StorageSeven |         7 |
                -- +--------------+-----------+

            --Результат запиту:


                SELECT Name, StorageID FROM Storage WHERE StorageID > 2;

                -- +--------------+-----------+
                -- | Name         | StorageID |
                -- +--------------+-----------+
                -- | StorageThree |         3 |
                -- | StorageFour  |         4 |
                -- | StorageFive  |         5 |
                -- | StorageSix   |         6 |
                -- | StorageSeven |         7 |
                -- +--------------+-----------+
        

-- 	c. Умов з використанням логічних операторів AND, OR та NOT

        --Усі поля таблиці:

            SELECT DoctorFullName, PacientFullName, OrdersID FROM Orders;

            -- +----------------+-----------------+----------+
            -- | DoctorFullName | PacientFullName | OrdersID |
            -- +----------------+-----------------+----------+
            -- | Tyler Durden   | The Narrator    |        1 |
            -- | Saul Goodman   | Walter White    |        2 |
            -- | Trevis Bickle  | Betsy White     |        3 |
            -- | Mario Mario    | Luigi Mario     |        4 |
            -- | Robocop        | Terminator      |        5 |
            -- +----------------+-----------------+----------+

        --Результат запиту:

        -- Опис:
            -- Визначимо ім'я лікаря, пацієнта, ID замовлення, ID яких більше 1 ТА менше 3

            SELECT DoctorFullName, PacientFullName, OrdersID FROM Orders WHERE OrdersID > 1 AND OrdersID < 3;

            -- +----------------+-----------------+----------+
            -- | DoctorFullName | PacientFullName | OrdersID |
            -- +----------------+-----------------+----------+
            -- | Saul Goodman   | Walter White    |        2 |
            -- +----------------+-----------------+----------+

        --Результат запиту:

        -- Опис:
            -- Визначимо ім'я лікаря, пацієнта, ID замовлення, ID яких менше дорівнює 1 АБО більше дорівнює 3


            SELECT DoctorFullName, PacientFullName, OrdersID FROM Orders WHERE OrdersID <= 1 OR OrdersID >= 3;

            -- +----------------+-----------------+----------+
            -- | DoctorFullName | PacientFullName | OrdersID |
            -- +----------------+-----------------+----------+
            -- | Tyler Durden   | The Narrator    |        1 |
            -- | Trevis Bickle  | Betsy White     |        3 |
            -- | Mario Mario    | Luigi Mario     |        4 |
            -- | Robocop        | Terminator      |        5 |
            -- +----------------+-----------------+----------+

        --Результат запиту:

        -- Опис:
            -- Визначимо ім'я лікаря, пацієнта, ID замовлення, ID яких НЕ дорівнює 3

            SELECT DoctorFullName, PacientFullName, OrdersID FROM Orders WHERE NOT OrdersID=3;

            -- +----------------+-----------------+----------+
            -- | DoctorFullName | PacientFullName | OrdersID |
            -- +----------------+-----------------+----------+
            -- | Tyler Durden   | The Narrator    |        1 |
            -- | Saul Goodman   | Walter White    |        2 |
            -- | Mario Mario    | Luigi Mario     |        4 |
            -- | Robocop        | Terminator      |        5 |
            -- +----------------+-----------------+----------+


-- 	d. Умов з використанням комбінацій логічних операторів

        --Усі поля таблиці:

            SELECT Name, TotalBought, TotalQuantity FROM Medicine;

            -- +-------------+-------------+---------------+
            -- | Name        | TotalBought | TotalQuantity |
            -- +-------------+-------------+---------------+
            -- | Tealoz Duo  |           4 |            35 |
            -- | PanzerLac   |          23 |           120 |
            -- | Laplas      |           4 |            50 |
            -- | Riamot      |           9 |            40 |
            -- | Macert      |           9 |            70 |
            -- | APlus       |        NULL |            45 |
            -- | StarWater   |        NULL |            87 |
            -- | AntiTrauma  |           2 |             7 |
            -- | RedLight    |           2 |             5 |
            -- | ClassFoster |           2 |             9 |
            -- +-------------+-------------+---------------+

        --Результат запиту:

            -- Опис:
                -- Визначимо назву ліків, кількість куплених одиниць, загальну кількість ,
                -- де НЕ виконується умова, що загальна кількість більше 35 ТА куплена кільксть менше 10

            SELECT Name, TotalBought, TotalQuantity FROM Medicine WHERE NOT (TotalQuantity > 35 AND TotalBought < 10);

            -- +-------------+-------------+---------------+
            -- | Name        | TotalBought | TotalQuantity |
            -- +-------------+-------------+---------------+
            -- | Tealoz Duo  |           4 |            35 |
            -- | PanzerLac   |          23 |           120 |
            -- | AntiTrauma  |           2 |             7 |
            -- | RedLight    |           2 |             5 |
            -- | ClassFoster |           2 |             9 |
            -- +-------------+-------------+---------------+

            -- Опис:
                -- Визначимо назву ліків, кількість куплених одиниць, загальну кількість ,
                -- де НЕ загальна кількість більше 35 АБО НЕ куплена кільксть менше 10


            SELECT Name, TotalBought, TotalQuantity FROM Medicine WHERE (NOT TotalQuantity > 35) OR (NOT TotalBought < 10);

            -- +-------------+-------------+---------------+
            -- | Name        | TotalBought | TotalQuantity |
            -- +-------------+-------------+---------------+
            -- | Tealoz Duo  |           4 |            35 |
            -- | PanzerLac   |          23 |           120 |
            -- | AntiTrauma  |           2 |             7 |
            -- | RedLight    |           2 |             5 |
            -- | ClassFoster |           2 |             9 |
            -- +-------------+-------------+---------------+


-- 	e. З використанням виразів над стовпцями, як в якості новостворених 
-- 	стовпців, так і умовах
        
        -- Опис:
            -- Визначимо назву ліків, критичну кількість та запас ліків,
            -- тобто різницю між загальною кількістю та критичною кількістю

            SELECT Name, TotalQuantity, CriticalQuantity, TotalQuantity - CriticalQuantity AS Reserve FROM Medicine;

            -- +-------------+---------------+------------------+---------+
            -- | Name        | TotalQuantity | CriticalQuantity | Reserve |
            -- +-------------+---------------+------------------+---------+
            -- | Tealoz Duo  |            35 |                2 |      33 |
            -- | PanzerLac   |           120 |               19 |     101 |
            -- | Laplas      |            50 |                2 |      48 |
            -- | Riamot      |            40 |               12 |      28 |
            -- | Macert      |            70 |               15 |      55 |
            -- | APlus       |            45 |                5 |      40 |
            -- | StarWater   |            87 |                4 |      83 |
            -- | AntiTrauma  |             7 |                4 |       3 |
            -- | RedLight    |             5 |                4 |       1 |
            -- | ClassFoster |             9 |                4 |       5 |
            -- +-------------+---------------+------------------+---------+

-- 	f. Використання операторів:

-- 		i. Приналежності множині

            --Усі поля таблиці:

                SELECT * FROM Warehouse;

                -- +-------------+----------------+
                -- | WarehouseID | Name           |
                -- +-------------+----------------+
                -- |           1 | WarehouseOne   |
                -- |           2 | WarehouseTwo   |
                -- |           3 | WarehouseThree |
                -- |           4 | WarehouseFour  |
                -- |           5 | WarehouseFive  |
                -- |           6 | WarehouseSix   |
                -- |           7 | WarehouseSeven |
                -- +-------------+----------------+

            --Результат запиту:

                -- Опис:
                    -- Випишемо назву сховища, визначимо його ID, де назва входить
                    -- до такого переліку: "WarehouseOne", "WarehouseTwo"

                SELECT * FROM Warehouse WHERE Name IN ("WarehouseOne", "WarehouseTwo");

                -- +-------------+--------------+
                -- | WarehouseID | Name         |
                -- +-------------+--------------+
                -- |           1 | WarehouseOne |
                -- |           2 | WarehouseTwo |
                -- +-------------+--------------+

-- 		ii. Приналежності діапазону

            --Усі поля таблиці:

                SELECT PacientFullName, PacientAge FROM Orders;

                -- +-----------------+------------+
                -- | PacientFullName | PacientAge |
                -- +-----------------+------------+
                -- | The Narrator    |         30 |
                -- | Walter White    |         50 |
                -- | Betsy White     |         20 |
                -- | Luigi Mario     |         50 |
                -- | Terminator      |         50 |
                -- +-----------------+------------+

            --Результат запиту:

                -- Опис:
                    -- Випишемо ім'я пацієнта, його вік, 
                    -- де вік знаходиться у проміжку від 10 до 40

                SELECT PacientFullName, PacientAge FROM Orders WHERE PacientAge BETWEEN 10 AND 40;

                -- +-----------------+------------+
                -- | PacientFullName | PacientAge |
                -- +-----------------+------------+
                -- | The Narrator    |         30 |
                -- | Betsy White     |         20 |
                -- +-----------------+------------+


--		iii. Відповідності шаблону

            --Усі поля таблиці:

                SELECT PacientFullName FROM Orders;

                -- +-----------------+
                -- | PacientFullName |
                -- +-----------------+
                -- | The Narrator    |
                -- | Walter White    |
                -- | Betsy White     |
                -- | Luigi Mario     |
                -- | Terminator      |
                -- +-----------------+

            --Результат запиту:

                -- Опис:
                    -- Випишемо ім'я пацієнта,
                    -- де ім'я починається на "The"

                SELECT PacientFullName FROM Orders WHERE PacientFullName LIKE "The%";

--                  +-----------------+
--                  | PacientFullName |
--                  +-----------------+
--                  | The Narrator    |
--                  +-----------------+


-- 		iv. Перевірка на невизначене значення

            -- Опис:
                -- Випишемо назву ліків, загально куплену кількість,
                -- де загальна кількість не вказана (NULL)

            --Усі поля таблиці:

                SELECT Name, TotalBought FROM Medicine;

                -- +-------------+-------------+
                -- | Name        | TotalBought |
                -- +-------------+-------------+
                -- | Tealoz Duo  |           4 |
                -- | PanzerLac   |          23 |
                -- | Laplas      |           4 |
                -- | Riamot      |           9 |
                -- | Macert      |           9 |
                -- | APlus       |        NULL |
                -- | StarWater   |        NULL |
                -- | AntiTrauma  |           2 |
                -- | RedLight    |           2 |
                -- | ClassFoster |           2 |
                -- +-------------+-------------+

            --Результат запиту:

                SELECT Name, TotalBought FROM Medicine WHERE TotalBought IS NULL;

                -- +-----------+-------------+
                -- | Name      | TotalBought |
                -- +-----------+-------------+
                -- | APlus     |        NULL |
                -- | StarWater |        NULL |
                -- +-----------+-------------+

-- 2) Створити запити з використанням підзапитів та з’єднань (разом 11
-- запитів) (в запитах повинні використовуватись 2 та більше таблиць):

-- 		a. Використання підзапитів в рядку вибірки полів (у секції select) та 
-- 		вибірки з таблиць (у секції from)
			
            --Результат запиту:

                -- Опис:
                -- Визначити, які ліки знаходяться в хоча б одному сховищі

    			SELECT 
                    Medicine.Name AS medname,
                    (SELECT
                        Storage.Name
                    FROM Storage
                    INNER JOIN StorageMedicine 
                    ON 
                        Storage.StorageID = StorageMedicine.StorageID
                    WHERE
                        Medicine.MedicineID = StorageMedicine.MedicineID
                    LIMIT 1) AS storage
                FROM Medicine;

                -- +-------------+--------------+
                -- | medname     | storage      |
                -- +-------------+--------------+
                -- | Tealoz Duo  | StorageOne   |
                -- | PanzerLac   | StorageTwo   |
                -- | Laplas      | StorageThree |
                -- | Riamot      | StorageFive  |
                -- | Macert      | NULL         |
                -- | APlus       | NULL         |
                -- | StarWater   | NULL         |
                -- | AntiTrauma  | NULL         |
                -- | RedLight    | NULL         |
                -- | ClassFoster | NULL         |
                -- +-------------+--------------+

            --Результат запиту:

                -- Визначаємо, пацієнта та ліки, які він( вона ) придбав(ла)

    			SELECT pacient, medicine
                FROM (
                    SELECT 
                        Orders.PacientFullName AS pacient,
                        Medicine.Name AS medicine
                    FROM Orders
                    INNER JOIN OrdersMedicine
                        ON Orders.OrdersID = OrdersMedicine.OrdersID
                    INNER JOIN Medicine
                        ON Medicine.MedicineID = OrdersMedicine.MedicineID
                    WHERE Orders.PacientFullName REGEXP 'i'
                ) sub;

                    -- +-------------+-----------+
                    -- | pacient     | medicine  |
                    -- +-------------+-----------+
                    -- | Betsy White | Riamot    |
                    -- | Betsy White | PanzerLac |
                    -- +-------------+-----------+

--		b. Використання підзапитів в умовах з конструкціями EXISTS, IN

            -- Опис:
                -- Визначимо назву ліків та склад, де вони знаходяться,
                -- де назва склаяду містить літеру "F":		

    			SELECT
                    Medicine.Name,
                    Storage.Name
                FROM Medicine
                INNER JOIN StorageMedicine
                    ON Medicine.MedicineID = StorageMedicine.StorageID
                INNER JOIN Storage
                    ON Storage.StorageID = StorageMedicine.StorageID
                WHERE Storage.Name
                    IN (
                        SELECT
                            Name
                        FROM Storage
                        WHERE
                            Name REGEXP 'F'
                    );

                    -- +--------+-------------+
                    -- | Name   | Name        |
                    -- +--------+-------------+
                    -- | Riamot | StorageFour |
                    -- | Riamot | StorageFour |
                    -- | Macert | StorageFive |
                    -- +--------+-------------+

            --Результат запиту:

                -- Обираємо такі ліки, які містяться хоча б в одному сховищі:

        			SELECT
                        Name
                    FROM Medicine AS med
                    WHERE EXISTS (
                            SELECT 
                                1
                            FROM StorageMedicine AS sm 
                            WHERE med.MedicineID = sm.MedicineID
                        );

                    -- +------------+
                    -- | Name       |
                    -- +------------+
                    -- | Tealoz Duo |
                    -- | PanzerLac  |
                    -- | Laplas     |
                    -- | Riamot     |
                    -- +------------+


-- 		c. Декартовий добуток

            -- Опис:
                -- Визначимо усі можливі пари ЛІКИ - СКЛАД 

            --Результат запиту:

                SELECT Medicine.Name, Storage.Name FROM Medicine JOIN Storage;

                -- +-------------+--------------+
                -- | Name        | Name         |
                -- +-------------+--------------+
                -- | Tealoz Duo  | StorageSeven |
                -- | Tealoz Duo  | StorageSix   |
                -- | Tealoz Duo  | StorageFive  |
                -- | Tealoz Duo  | StorageFour  |
                -- | Tealoz Duo  | StorageThree |
                -- | Tealoz Duo  | StorageTwo   |
                -- | Tealoz Duo  | StorageOne   |
                -- | PanzerLac   | StorageSeven |
                -- | PanzerLac   | StorageSix   |
                -- | PanzerLac   | StorageFive  |
                -- | PanzerLac   | StorageFour  |
                -- | PanzerLac   | StorageThree |
                -- | PanzerLac   | StorageTwo   |
                -- | PanzerLac   | StorageOne   |
                -- | Laplas      | StorageSeven |
                -- | Laplas      | StorageSix   |
                -- | Laplas      | StorageFive  |
                -- | Laplas      | StorageFour  |
                -- | Laplas      | StorageThree |
                -- | Laplas      | StorageTwo   |
                -- | Laplas      | StorageOne   |
                -- | Riamot      | StorageSeven |
                -- | Riamot      | StorageSix   |
                -- | Riamot      | StorageFive  |
                -- | Riamot      | StorageFour  |
                -- | Riamot      | StorageThree |
                -- | Riamot      | StorageTwo   |
                -- | Riamot      | StorageOne   |
                -- | Macert      | StorageSeven |
                -- | Macert      | StorageSix   |
                -- | Macert      | StorageFive  |
                -- | Macert      | StorageFour  |
                -- | Macert      | StorageThree |
                -- | Macert      | StorageTwo   |
                -- | Macert      | StorageOne   |
                -- | APlus       | StorageSeven |
                -- | APlus       | StorageSix   |
                -- | APlus       | StorageFive  |
                -- | APlus       | StorageFour  |
                -- | APlus       | StorageThree |
                -- | APlus       | StorageTwo   |
                -- | APlus       | StorageOne   |
                -- | StarWater   | StorageSeven |
                -- | StarWater   | StorageSix   |
                -- | StarWater   | StorageFive  |
                -- | StarWater   | StorageFour  |
                -- | StarWater   | StorageThree |
                -- | StarWater   | StorageTwo   |
                -- | StarWater   | StorageOne   |
                -- | AntiTrauma  | StorageSeven |
                -- | AntiTrauma  | StorageSix   |
                -- | AntiTrauma  | StorageFive  |
                -- | AntiTrauma  | StorageFour  |
                -- | AntiTrauma  | StorageThree |
                -- | AntiTrauma  | StorageTwo   |
                -- | AntiTrauma  | StorageOne   |
                -- | RedLight    | StorageSeven |
                -- | RedLight    | StorageSix   |
                -- | RedLight    | StorageFive  |
                -- | RedLight    | StorageFour  |
                -- | RedLight    | StorageThree |
                -- | RedLight    | StorageTwo   |
                -- | RedLight    | StorageOne   |
                -- | ClassFoster | StorageSeven |
                -- | ClassFoster | StorageSix   |
                -- | ClassFoster | StorageFive  |
                -- | ClassFoster | StorageFour  |
                -- | ClassFoster | StorageThree |
                -- | ClassFoster | StorageTwo   |
                -- | ClassFoster | StorageOne   |
                -- +-------------+--------------+


-- 		d. З’єднання декількох таблиць за рівністю
            
            -- Опис:
                -- Знаходимо, ліки, у яких спосіб приготування однаковий між собою

                SELECT
                    Medicine.Name,
                    med.Name,
                    med.PreparationID
                FROM
                    Medicine,
                    Medicine AS med
                WHERE
                    Medicine.PreparationID = med.PreparationID;

                -- +-------------+-------------+---------------+
                -- | Name        | Name        | PreparationID |
                -- +-------------+-------------+---------------+
                -- | Tealoz Duo  | Tealoz Duo  |             2 |
                -- | Tealoz Duo  | Riamot      |             2 |
                -- | PanzerLac   | PanzerLac   |             4 |
                -- | PanzerLac   | StarWater   |             4 |
                -- | Laplas      | Laplas      |             3 |
                -- | Laplas      | APlus       |             3 |
                -- | Riamot      | Tealoz Duo  |             2 |
                -- | Riamot      | Riamot      |             2 |
                -- | Macert      | Macert      |             1 |
                -- | Macert      | AntiTrauma  |             1 |
                -- | Macert      | RedLight    |             1 |
                -- | Macert      | ClassFoster |             1 |
                -- | APlus       | Laplas      |             3 |
                -- | APlus       | APlus       |             3 |
                -- | StarWater   | PanzerLac   |             4 |
                -- | StarWater   | StarWater   |             4 |
                -- | AntiTrauma  | Macert      |             1 |
                -- | AntiTrauma  | AntiTrauma  |             1 |
                -- | AntiTrauma  | RedLight    |             1 |
                -- | AntiTrauma  | ClassFoster |             1 |
                -- | RedLight    | Macert      |             1 |
                -- | RedLight    | AntiTrauma  |             1 |
                -- | RedLight    | RedLight    |             1 |
                -- | RedLight    | ClassFoster |             1 |
                -- | ClassFoster | Macert      |             1 |
                -- | ClassFoster | AntiTrauma  |             1 |
                -- | ClassFoster | RedLight    |             1 |
                -- | ClassFoster | ClassFoster |             1 |
                -- +-------------+-------------+---------------+

-- 		e. З’єднання декількох таблиць за рівністю та умовою відбору
            
            -- Опис:
                -- Визначимо усі можливі пари ЛІКИ - СКЛАД,
                -- де у результаті ім'я в парах не має співпадати,
                -- тобто не буде рядка "AAA AAA 2" 

    			SELECT
                    Medicine.Name,
                    med.Name,
                    med.PreparationID
                FROM
                    Medicine,
                    Medicine AS med
                WHERE
                        Medicine.PreparationID = med.PreparationID
                    AND
                        Medicine.Name != med.Name;

                -- +-------------+-------------+---------------+
                -- | Name        | Name        | PreparationID |
                -- +-------------+-------------+---------------+
                -- | Tealoz Duo  | Riamot      |             2 |
                -- | PanzerLac   | StarWater   |             4 |
                -- | Laplas      | APlus       |             3 |
                -- | Riamot      | Tealoz Duo  |             2 |
                -- | Macert      | AntiTrauma  |             1 |
                -- | Macert      | RedLight    |             1 |
                -- | Macert      | ClassFoster |             1 |
                -- | APlus       | Laplas      |             3 |
                -- | StarWater   | PanzerLac   |             4 |
                -- | AntiTrauma  | Macert      |             1 |
                -- | AntiTrauma  | RedLight    |             1 |
                -- | AntiTrauma  | ClassFoster |             1 |
                -- | RedLight    | Macert      |             1 |
                -- | RedLight    | AntiTrauma  |             1 |
                -- | RedLight    | ClassFoster |             1 |
                -- | ClassFoster | Macert      |             1 |
                -- | ClassFoster | AntiTrauma  |             1 |
                -- | ClassFoster | RedLight    |             1 |
                -- +-------------+-------------+---------------+

-- 		f. Внутрішнього з’єднання

            -- Опис:
                -- Визначимо на яких складах знаходяться ліки

    			SELECT
                    Medicine.Name,
                    Storage.Name
                FROM Medicine
                INNER JOIN
                    StorageMedicine
                ON
                    Medicine.MedicineID = StorageMedicine.MedicineID
                INNER JOIN
                    Storage
                ON
                    Storage.StorageID = StorageMedicine.StorageID;

                -- +------------+--------------+
                -- | Name       | Name         |
                -- +------------+--------------+
                -- | Tealoz Duo | StorageOne   |
                -- | PanzerLac  | StorageTwo   |
                -- | Laplas     | StorageThree |
                -- | PanzerLac  | StorageFour  |
                -- | Tealoz Duo | StorageFour  |
                -- | Riamot     | StorageFive  |
                -- | Riamot     | StorageOne   |
                -- +------------+--------------+


-- 		g. Лівого зовнішнього з’єднання

            -- Опис:
                -- Визначимо пари у яких складах знаходяться ліки,
                -- при чому покажемо, які ліки не мають сховищ
                -- ( тобто вони в дефіциті чи відсутні )

    			SELECT
                    Medicine.Name,
                    Storage.Name
                FROM
                    Medicine
                LEFT OUTER JOIN 
                    StorageMedicine
                ON
                    Medicine.MedicineID = StorageMedicine.StorageID
                LEFT OUTER JOIN
                    Storage
                ON
                    Storage.StorageID = StorageMedicine.StorageID;

                -- +-------------+--------------+
                -- | Name        | Name         |
                -- +-------------+--------------+
                -- | Tealoz Duo  | StorageOne   |
                -- | Tealoz Duo  | StorageOne   |
                -- | PanzerLac   | StorageTwo   |
                -- | Laplas      | StorageThree |
                -- | Riamot      | StorageFour  |
                -- | Riamot      | StorageFour  |
                -- | Macert      | StorageFive  |
                -- | APlus       | NULL         |
                -- | StarWater   | NULL         |
                -- | AntiTrauma  | NULL         |
                -- | RedLight    | NULL         |
                -- | ClassFoster | NULL         |
                -- +-------------+--------------+


-- 		h. Правого зовнішнього з’єднання

            -- Опис:
                -- Визначимо пари у яких складах знаходяться ліки,
                -- при чому покажемо, які сховища пустують

    			SELECT
                    Medicine.Name,
                    Storage.Name
                FROM
                    Medicine
                RIGHT OUTER JOIN
                    StorageMedicine
                ON
                    Medicine.MedicineID = StorageMedicine.MedicineID
                RIGHT OUTER JOIN
                    Storage
                ON
                    Storage.StorageID = StorageMedicine.StorageID;

                -- +------------+--------------+
                -- | Name       | Name         |
                -- +------------+--------------+
                -- | Tealoz Duo | StorageOne   |
                -- | Riamot     | StorageOne   |
                -- | PanzerLac  | StorageTwo   |
                -- | Laplas     | StorageThree |
                -- | PanzerLac  | StorageFour  |
                -- | Tealoz Duo | StorageFour  |
                -- | Riamot     | StorageFive  |
                -- | NULL       | StorageSix   |
                -- | NULL       | StorageSeven |
                -- +------------+--------------+

-- 		i. Об’єднання запитів

            -- Опис:
                -- Оберемо сукупність усіх ліків, складів та сховищ

                SELECT Name AS name FROM Medicine
                UNION
                SELECT Name AS name FROM Storage
                UNION
                SELECT Name AS name FROM Warehouse;

                -- +----------------+
                -- | name           |
                -- +----------------+
                -- | Tealoz Duo     |
                -- | PanzerLac      |
                -- | Laplas         |
                -- | Riamot         |
                -- | Macert         |
                -- | APlus          |
                -- | StarWater      |
                -- | AntiTrauma     |
                -- | RedLight       |
                -- | ClassFoster    |
                -- | StorageOne     |
                -- | StorageTwo     |
                -- | StorageThree   |
                -- | StorageFour    |
                -- | StorageFive    |
                -- | StorageSix     |
                -- | StorageSeven   |
                -- | WarehouseOne   |
                -- | WarehouseTwo   |
                -- | WarehouseThree |
                -- | WarehouseFour  |
                -- | WarehouseFive  |
                -- | WarehouseSix   |
                -- | WarehouseSeven |
                -- +----------------+



            


